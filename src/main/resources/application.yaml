spring:
  datasource:
    username: spring_example
    password: spring_example
    url: jdbc:mysql://localhost:3306/spring_example

# This will scan your Objects and create your database.
# create – Hibernate first drops existing tables, then creates new tables
# update – the object model created based on the mappings (annotations or XML) is compared with the existing schema, and then Hibernate updates the schema 
# according to the diff. It never deletes the existing tables or columns even if they are no more required by the application
# create-drop – similar to create, with the addition that Hibernate will drop the database after all operations are completed. Typically used for unit testing
# validate – Hibernate only validates whether the tables and columns exist, otherwise it throws an exception
# none – this value effectively turns off the DDL generation

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    defer-datasource-initialization: true

# This portion reads the files from data and schema sql files to create the database.
# always - Always initialize the datasource.
# embedded - Embedded Only initialize an embedded datasource.
# never - Never do not initialize the datasource.   
  sql:
    init:
      mode: always
